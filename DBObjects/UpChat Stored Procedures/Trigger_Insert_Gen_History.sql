-- --In master-- sp_configure 'show advanced options', 1-- GO-- RECONFIGURE;-- GO-- sp_configure 'Ole Automation Procedures', 1-- GO-- RECONFIGURE;-- GO-- sp_configure 'show advanced options', 1-- GO-- RECONFIGURE;

-- IF EXISTS (SELECT 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'dbo' AND TABLE_NAME = 'StoreAPIURL')
-- BEGIN
	-- drop table StoreAPIURL
-- END

-- IF NOT EXISTS (SELECT 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'dbo' AND TABLE_NAME = 'StoreAPIURL')
-- BEGIN
	-- CREATE TABLE StoreAPIURL(ID BIGINT IDENTITY, HRID BIGINT, HistoryID BIGINT, APIUrl NVARCHAR(MAX), ResponseStatus Nvarchar(MAX))
-- END

ALTER TRIGGER [dbo].[Trigger_Insert_Gen_History]ON [dbo].[gen_History]AFTER INSERTASBEGIN	DECLARE 	@UpChatAPI_URL NVARCHAR(200),	@HrID BIGINT, 	@HistoryID BIGINT,	@AppActionDoneBy INT,	@CreatedByID BIGINT,	@ActionID BIGINT,	@EmployeeID NVARCHAR(100);	DECLARE @APIURL NVARCHAR(MAX);	Declare @Object as Int;	Declare @ResponseText as Varchar(8000);	SET @UpChatAPI_URL = N'http://3.218.6.134:9096/'	SELECT TOP 1 @HrID = HiringRequest_ID, 				 @HistoryID = id, 				 @ActionID = Action_ID, 				 @AppActionDoneBy = AppActionDoneBy, 				 @CreatedByID = CreatedByID FROM inserted;	SELECT @EmployeeID = EmployeeID FROM usr_User WHERE id = @CreatedByID	IF @HrID > 0 and @HistoryID > 0 and @ActionID > 0 and @ActionID <> 51	BEGIN		--AddChannel		--Create_HRDBrifing : On HR submitted : create Channel in firebased		IF @ActionID = 4		BEGIN						SET @APIURL = @UpChatAPI_URL + 'Channel/AddChannel?HrID=' + CAST(@HrID as NVARCHAR(100));			Exec sp_OACreate 'MSXML2.XMLHTTP', @Object OUT;			Exec sp_OAMethod @Object, 'open', NULL, 'get',								@APIURL,								'false'			Exec sp_OAMethod @Object,'setRequestHeader',null,'X-API-KEY','QXBpS2V5TWlkZGxld2FyZQ=='			EXEC sp_OAMethod @Object, 'setRequestHeader', null, 'Content-Type', 'application/json'			Exec sp_OAMethod @Object, 'send'			Exec sp_OAMethod @Object, 'responseText', @ResponseText OUTPUT			Exec sp_OADestroy @Object			INSERT INTO StoreAPIURL(HRID ,HistoryID, APIUrl, ResponseStatus)			VALUES(@HrID, @HistoryID, @APIURL, @ResponseText)		END		IF EXISTS (SELECT 1 from gen_ChannelHistory with(nolock) where HiringRequestID = @HrID)		BEGIN			--AddHRActivityInChats			IF @ActionID <> 4 			BEGIN				SET @APIURL = @UpChatAPI_URL + 'Channel/AddHRActivityInChats?HrID=' + CAST(@HrID as NVARCHAR(100)) + '&HistoryID=' + CAST(@HistoryID as NVARCHAR(100));				Exec sp_OACreate 'MSXML2.XMLHTTP', @Object OUT;				Exec sp_OAMethod @Object, 'open', NULL, 'get',									@APIURL,									'false'				Exec sp_OAMethod @Object,'setRequestHeader',null,'X-API-KEY','QXBpS2V5TWlkZGxld2FyZQ=='				EXEC sp_OAMethod @Object, 'setRequestHeader', null, 'Content-Type', 'application/json'				Exec sp_OAMethod @Object, 'send'				Exec sp_OAMethod @Object, 'responseText', @ResponseText OUTPUT				Exec sp_OADestroy @Object				INSERT INTO StoreAPIURL(HRID ,HistoryID, APIUrl, ResponseStatus)				VALUES(@HrID, @HistoryID, @APIURL, @ResponseText)			END			--AddUserInChannel			IF NOT EXISTS (SELECT TOP 1 * from gen_ChannelHistory WITH(NOLOCK) 			WHERE HiringRequestID = @HrID AND UserEmpID = @EmployeeID AND ChannelActionID = 1 ORDER BY 1 DESC)			BEGIN				DECLARE 				@photoUrl NVARCHAR(500), 				@userDesignation NVARCHAR(100), 				@userEmpId NVARCHAR(100), 				@userName NVARCHAR(100), 				@userInitial NVARCHAR(100), 				@isATS int				SET @isATS = CASE WHEN @AppActionDoneBy = 2 then 1 else 0 END				SELECT 				@photoUrl = ISNULL(U.ProfilePic,''),				@userDesignation = ISNULL(U.Designation,''),				@userEmpId = U.EmployeeID,				@userInitial = dbo.Fun_GetInitials(ISNULL(U.fullname,'')),				@userName = ISNULL(U.fullname,'')				FROM usr_User U WITH(nolock) where ID = @CreatedByID							SET @APIURL = @UpChatAPI_URL + 'User/AddUserInChannel';				declare @body varchar(max)				Set @body='{							"hRID": "'+Cast(@HrID as Nvarchar(20))+'",							"photoUrl": "'+@photoUrl+'",							"userDesignation": "'+@userDesignation+'",							"userEmpId": "'+@userEmpId+'",							"userName":"'+@userName +'",							"userInitial":"'+@userInitial+'",							"isATS":"'+Cast(@isATS  as Nvarchar(20))+'"							}'				Exec sp_OACreate 'MSXML2.XMLHTTP', @Object OUT;				Exec sp_OAMethod @Object, 'open', NULL, 'post', @APIURL,'false'				Exec sp_OAMethod @Object, 'setRequestHeader',null,'X-API-KEY','QXBpS2V5TWlkZGxld2FyZQ=='				EXEC sp_OAMethod @Object, 'setRequestHeader', null, 'Content-Type', 'application/json'				Exec sp_OAMethod @Object, 'send', null, @body				Exec sp_OAMethod @Object, 'responseText', @ResponseText OUTPUT				Exec sp_OADestroy @Object				INSERT INTO StoreAPIURL(HRID ,HistoryID, APIUrl, ResponseStatus)				VALUES(@HrID, @HistoryID, @APIURL+ ' : ' + @body, @ResponseText)			END		END	ENDEND